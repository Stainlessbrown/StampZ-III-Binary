name: Test Cross-Platform Bundles

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  test-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pillow matplotlib numpy || echo "Some packages may have failed"
        pip list
    
    - name: Test basic imports
      run: |
        python -c "
        try:
            import tkinter as tk
            print('✅ tkinter import OK')
            root = tk.Tk()
            root.withdraw()
            print('✅ tkinter window creation OK')
            root.destroy()
        except Exception as e:
            print(f'❌ tkinter error: {e}')
            
        try:
            from PIL import Image
            print('✅ PIL import OK')
        except Exception as e:
            print(f'❌ PIL error: {e}')
            
        try:
            import matplotlib.pyplot as plt
            print('✅ matplotlib import OK')
        except Exception as e:
            print(f'❌ matplotlib error: {e}')
        "
    
    - name: Test app startup
      run: |
        python stampz.py --version || echo "App test completed"
      timeout-minutes: 2
    
    - name: Create self-contained Windows bundle
      run: |
        # Use the complete build script if it exists, otherwise use enhanced PyInstaller
        if (Test-Path "build_windows_complete.py") {
          python build_windows_complete.py
        } else {
          pyinstaller --onedir --windowed `
            --add-data "data;data" `
            --add-data "templates;templates" `
            --collect-all="matplotlib" `
            --collect-all="pandas" `
            --collect-all="numpy" `
            --collect-all="PIL" `
            --collect-all="sklearn" `
            --hidden-import="matplotlib.backends.backend_tkagg" `
            --hidden-import="pandas._libs.tslibs.base" `
            --hidden-import="numpy.random.common" `
            --hidden-import="PIL._tkinter_finder" `
            --exclude-module="IPython" `
            --exclude-module="jupyter" `
            --exclude-module="notebook" `
            --exclude-module="pytest" `
            --upx-exclude="*.dll" `
            --noupx `
            stampz.py
        }
    
    - name: Test bundle execution
      run: |
        echo "Testing Windows bundle startup..."
        cd dist/stampz
        dir
        # Try to run with timeout
        Start-Process -FilePath ".\stampz.exe" -ArgumentList "--version" -Wait -PassThru -NoNewWindow
    
    - name: Check bundle dependencies
      run: |
        cd dist/stampz
        echo "Checking DLL dependencies..."
        Get-ChildItem -Filter "*.dll" | Select-Object Name, Length
        echo "Checking main executable..."
        Get-ItemProperty .\stampz.exe | Select-Object Name, Length, LastWriteTime
    
    - name: Upload Windows bundle
      uses: actions/upload-artifact@v4
      with:
        name: test-bundle-windows-x64
        path: dist/stampz/
        retention-days: 7

  test-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pillow matplotlib numpy
    
    - name: Test basic imports
      run: |
        python -c "
        try:
            import tkinter as tk
            print('✅ tkinter import OK')
            root = tk.Tk()
            root.withdraw()
            print('✅ tkinter window creation OK')
            root.destroy()
        except Exception as e:
            print(f'❌ tkinter error: {e}')
        "
    
    - name: Create macOS bundle
      run: |
        pyinstaller --onedir --windowed \
          --add-data "data:data" \
          --add-data "templates:templates" \
          --hidden-import="PIL._tkinter_finder" \
          --collect-all="matplotlib" \
          --collect-all="PIL" \
          stampz.py
    
    - name: Upload macOS bundle
      uses: actions/upload-artifact@v4
      with:
        name: test-bundle-macos
        path: dist/stampz/
        retention-days: 7
