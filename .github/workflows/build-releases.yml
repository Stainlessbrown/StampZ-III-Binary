name: Build Release Bundles

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual triggering
    inputs:
      version:
        description: 'Release version (e.g., v3.0.4)'
        required: true
        default: 'v3.0.4'

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        pip list  # Show what's installed
    
    - name: Create self-contained Windows bundle
      run: |
        # Create enhanced PyInstaller spec
        $spec = @"
# -*- mode: python ; coding: utf-8 -*-
import os
from PyInstaller.utils.hooks import collect_all

# Collect ALL dependencies for complete bundle
matplotlib_datas, matplotlib_binaries, matplotlib_hiddenimports = collect_all('matplotlib')
pandas_datas, pandas_binaries, pandas_hiddenimports = collect_all('pandas')
numpy_datas, numpy_binaries, numpy_hiddenimports = collect_all('numpy')
PIL_datas, PIL_binaries, PIL_hiddenimports = collect_all('PIL')

try:
    sklearn_datas, sklearn_binaries, sklearn_hiddenimports = collect_all('sklearn')
except:
    sklearn_datas, sklearn_binaries, sklearn_hiddenimports = [], [], []

a = Analysis(
    ['stampz.py'],
    pathex=['.'],
    binaries=[
        *matplotlib_binaries,
        *pandas_binaries,
        *numpy_binaries,
        *sklearn_binaries,
        *PIL_binaries,
    ],
    datas=[
        *matplotlib_datas,
        *pandas_datas,
        *numpy_datas,
        *sklearn_datas,
        *PIL_datas,
        ('data', 'data') if os.path.exists('data') else [],
        ('templates', 'templates') if os.path.exists('templates') else [],
    ],
    hiddenimports=[
        'tkinter', 'tkinter.ttk', 'tkinter.filedialog', 'tkinter.messagebox', 'tkinter.simpledialog',
        *matplotlib_hiddenimports,
        *pandas_hiddenimports,
        *numpy_hiddenimports,
        *sklearn_hiddenimports,
        *PIL_hiddenimports,
        # Critical imports for Windows
        'matplotlib.backends.backend_tkagg',
        'matplotlib.backends.backend_agg',
        'matplotlib.backends._backend_agg',
        'pandas._libs.tslibs.base',
        'pandas._libs.tslibs.nattype', 
        'pandas._libs.parsers',
        'numpy.random.common',
        'numpy.random.bounded_integers',
        'openpyxl', 'odfpy', 'ezodf', 'lxml', 'colorspacious', 'tksheet',
        # Our app modules
        'utils.spectral_analyzer', 'utils.color_analyzer', 'utils.color_analysis_db',
        'plot3d.ternary_plot_app', 'plot3d.Plot_3D', 'app.analysis_manager',
    ],
    hookspath=[],
    runtime_hooks=[],
    excludes=['IPython', 'jupyter', 'notebook', 'sphinx', 'pytest', 'setuptools'],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=None,
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data, cipher=None)

exe = EXE(
    pyz,
    a.scripts,
    [],
    exclude_binaries=True,
    name='StampZ',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=False,  # Don't compress - causes issues with matplotlib
    console=False,  # Windows GUI app
    disable_windowed_traceback=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
)

coll = COLLECT(
    exe,
    a.binaries,
    a.zipfiles,
    a.datas,
    strip=False,
    upx=False,
    upx_exclude=[],
    name='StampZ',
)
"@
        
        # Write the spec file
        $spec | Out-File -FilePath "StampZ-Complete.spec" -Encoding UTF8
        
        # Build the executable
        pyinstaller --clean --noconfirm StampZ-Complete.spec
    
    - name: Download VC++ Redistributable
      run: |
        # Create vcredist folder in the dist directory
        New-Item -Path "dist\StampZ\vcredist" -ItemType Directory -Force
        
        # Download VC++ Redistributable
        $url = "https://aka.ms/vs/17/release/vc_redist.x64.exe"
        $output = "dist\StampZ\vcredist\vc_redist.x64.exe"
        
        try {
            Invoke-WebRequest -Uri $url -OutFile $output
            Write-Host "‚úÖ Downloaded VC++ Redistributable"
        } catch {
            Write-Host "‚ö†Ô∏è Could not download VC++ Redistributable: $_"
        }
    
    - name: Create user-friendly launcher and documentation
      run: |
        # Create smart launcher
        $launcher = @"
@echo off
title StampZ - Stamp Analysis Tool
color 0A

echo.
echo  ===================================
echo   StampZ - Stamp Analysis Tool
echo  ===================================
echo.
echo  Starting application...

REM Try to run StampZ directly
StampZ.exe
set "exit_code=%ERRORLEVEL%"

if %exit_code% NEQ 0 (
    echo.
    echo  ‚ùå StampZ failed to start properly.
    echo.
    echo  This is usually due to missing system components.
    echo  Would you like to install the required components now?
    echo.
    set /p "choice=  Install missing components? [Y/N]: "
    
    if /i "%choice%"=="Y" (
        if exist "vcredist\vc_redist.x64.exe" (
            echo.
            echo  üì¶ Installing Visual C++ Redistributable...
            echo  Please wait while the installer runs...
            vcredist\vc_redist.x64.exe /quiet /norestart
            
            if %ERRORLEVEL% EQU 0 (
                echo  ‚úÖ Installation completed successfully!
                echo.
                echo  Please try running StampZ again.
                echo  You can double-click "StampZ.exe" or run this launcher again.
            ) else (
                echo  ‚ö†Ô∏è Installation may have encountered issues.
                echo  You can try running vcredist\vc_redist.x64.exe manually.
            )
        ) else (
            echo  ‚ùå Installer not found in vcredist folder.
            echo  Please download Visual C++ Redistributable manually:
            echo  https://aka.ms/vs/17/release/vc_redist.x64.exe
        )
    ) else (
        echo.
        echo  üí° If you change your mind, you can:
        echo  1. Run this launcher again and choose Y
        echo  2. Or manually install from: vcredist\vc_redist.x64.exe
    )
    
    echo.
    pause
) else (
    echo  ‚úÖ StampZ started successfully!
)
"@
        
        $launcher | Out-File -FilePath "dist\StampZ\Launch StampZ.bat" -Encoding ASCII
        
        # Create README
        $readme = @"
# StampZ v${{ github.event.inputs.version || '3.0.4' }} - Complete Windows Bundle

## üöÄ Quick Start (3 Steps)

1. **Extract** this ZIP file to a folder (like your Desktop)
2. **Run** "Launch StampZ.bat" (double-click it)
3. **Done!** StampZ should start

## üìÅ What's in this bundle?

- **StampZ.exe** - The main application
- **Launch StampZ.bat** - Smart launcher that handles setup
- **vcredist/** - Windows system components (if needed)
- **All dependencies included** - No separate downloads needed

## üîß If StampZ won't start

1. **Use the launcher**: Always try "Launch StampZ.bat" first
   - It will automatically install missing system components
   
2. **Security warnings**: Windows might show "Windows protected your PC"
   - Click "More info" ‚Üí "Run anyway"
   - This is normal for unsigned applications

3. **Still having issues?**
   - Try running "Launch StampZ.bat" as Administrator (right-click ‚Üí "Run as administrator")
   - Check that Windows Defender isn't blocking the files

## ‚ú® New Features in this Version

- **Ternary Plot Analysis** - Advanced 3D color visualization
- **Enhanced Spectral Analysis** - Detailed color spectrum analysis  
- **Improved Color Tools** - Better accuracy and performance
- **Self-contained bundle** - No manual dependency installation

## üìä File Size Note

This bundle is larger than previous versions (~200MB) because it includes:
- Pandas (data analysis engine)
- Matplotlib (advanced plotting)
- All Windows runtime libraries
- Complete dependency stack

This ensures it works on ANY Windows system without additional downloads!

## üÜò Need Help?

If you encounter issues:
1. Make sure you extracted the entire ZIP file
2. Try the "Launch StampZ.bat" launcher
3. Run as Administrator if needed
4. Contact support with details about your Windows version

---
Built with ‚ù§Ô∏è for stamp collectors and analysts everywhere!
"@
        
        $readme | Out-File -FilePath "dist\StampZ\README.txt" -Encoding UTF8
        
        # Create installer script for vcredist
        $vcinstaller = @"
@echo off
echo Installing Visual C++ Redistributable for StampZ...
echo This ensures StampZ has all required system components.
echo.

if exist "vc_redist.x64.exe" (
    echo Installing Microsoft Visual C++ 2015-2022 Redistributable (x64)...
    vc_redist.x64.exe /quiet /norestart
    if %ERRORLEVEL% EQU 0 (
        echo ‚úÖ Installation completed successfully!
        echo You can now run StampZ.
    ) else (
        echo ‚ö†Ô∏è Installation finished with warnings or errors.
        echo StampZ might still work. Try running it to see.
    )
) else (
    echo ‚ùå VC++ Redistributable installer not found.
    echo Please download it from: https://aka.ms/vs/17/release/vc_redist.x64.exe
)

echo.
pause
"@
        
        $vcinstaller | Out-File -FilePath "dist\StampZ\vcredist\install_vcredist.bat" -Encoding ASCII
    
    - name: Test the bundle
      run: |
        echo "üß™ Testing the Windows bundle..."
        cd dist\StampZ
        dir
        echo "Files in bundle:"
        Get-ChildItem -Recurse | Select-Object Name, Length | Format-Table
        
        # Quick test of the executable (with timeout)
        echo "Testing StampZ.exe startup..."
        $proc = Start-Process -FilePath ".\StampZ.exe" -ArgumentList "--version" -PassThru -NoNewWindow
        $finished = $proc.WaitForExit(10000)  # 10 second timeout
        if ($finished) {
            echo "‚úÖ StampZ.exe responds to --version flag"
        } else {
            $proc.Kill()
            echo "‚ö†Ô∏è StampZ.exe test timed out (this might be normal for GUI apps)"
        }
    
    - name: Create release archive
      run: |
        cd dist
        Compress-Archive -Path "StampZ" -DestinationPath "StampZ-Windows-x64-Complete.zip" -CompressionLevel Optimal
        
        # Show final archive info
        $archive = Get-Item "StampZ-Windows-x64-Complete.zip"
        echo "üì¶ Created release archive:"
        echo "   File: $($archive.Name)"
        echo "   Size: $([math]::Round($archive.Length / 1MB, 2)) MB"
    
    - name: Upload Windows bundle
      uses: actions/upload-artifact@v3
      with:
        name: StampZ-Windows-x64-Complete
        path: dist/StampZ-Windows-x64-Complete.zip
        retention-days: 90

  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Create macOS bundle
      run: |
        pyinstaller --onedir --windowed \
          --add-data "data:data" \
          --add-data "templates:templates" \
          --collect-all="matplotlib" \
          --collect-all="pandas" \
          --collect-all="numpy" \
          --collect-all="PIL" \
          --hidden-import="matplotlib.backends.backend_tkagg" \
          --hidden-import="pandas._libs.tslibs.base" \
          --exclude-module="IPython" \
          --exclude-module="jupyter" \
          --name="StampZ" \
          stampz.py
    
    - name: Create macOS documentation
      run: |
        cat > dist/StampZ/README.txt << 'EOF'
# StampZ for macOS

## Quick Start
1. Extract this archive
2. Drag StampZ.app to Applications folder (optional)
3. Right-click StampZ.app ‚Üí Open (first time only)
4. Click "Open" in the security dialog

## Security Note
macOS will show a security warning the first time you run StampZ.
This is normal for unsigned applications. Click "Open" to proceed.

## Features
- Complete stamp analysis toolkit
- Ternary plot visualization
- Spectral analysis tools
- Self-contained - no additional installations needed

Built for macOS 10.14+ (Intel and Apple Silicon)
EOF
    
    - name: Create macOS archive
      run: |
        cd dist
        zip -r "StampZ-macOS-Universal.zip" "StampZ" -x "*.DS_Store"
    
    - name: Upload macOS bundle
      uses: actions/upload-artifact@v3
      with:
        name: StampZ-macOS-Universal
        path: dist/StampZ-macOS-Universal.zip
        retention-days: 90

  create-release:
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    
    steps:
    - name: Download Windows bundle
      uses: actions/download-artifact@v3
      with:
        name: StampZ-Windows-x64-Complete
    
    - name: Download macOS bundle  
      uses: actions/download-artifact@v3
      with:
        name: StampZ-macOS-Universal
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.version || github.ref_name }}
        name: StampZ ${{ github.event.inputs.version || github.ref_name }}
        body: |
          ## StampZ ${{ github.event.inputs.version || github.ref_name }} - Complete Release
          
          **Ready-to-run bundles with all dependencies included!**
          
          ### ü™ü Windows Users
          - Download: `StampZ-Windows-x64-Complete.zip`
          - Extract and run `Launch StampZ.bat`
          - Includes automatic VC++ Redistributable installer
          - Works on Windows 10/11 (64-bit)
          
          ### üçé macOS Users  
          - Download: `StampZ-macOS-Universal.zip`
          - Extract and run `StampZ.app`
          - Right-click ‚Üí Open (first time only)
          - Works on macOS 10.14+ (Intel & Apple Silicon)
          
          ### ‚ú® What's New
          - Self-contained bundles (no manual dependency installation!)
          - Enhanced Ternary Plot analysis
          - Improved Spectral Analysis tools
          - Better Windows compatibility
          - Smart launcher with automatic problem resolution
          
          ### üìã Instructions
          1. **Download** the bundle for your operating system
          2. **Extract** the ZIP file
          3. **Run** the launcher (Windows) or app (macOS)
          4. **Done!** - Everything is included
          
          No separate installations, no dependency hunting, no technical setup required!
        files: |
          StampZ-Windows-x64-Complete.zip
          StampZ-macOS-Universal.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}